{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport * as actions from '../actions/actions';\nimport * as t from '../types/types';\nvar initialState = [];\n\nvar basketReducer = function basketReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case t.ADD_PRODUCT:\n      var found = state.find(function (product) {\n        return product.id === action.payload.id;\n      });\n\n      if (found) {\n        return state;\n      }\n\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case t.INCREMENT_PRODUCT:\n      var newState = state.map(function (product) {\n        console.log(product);\n\n        if (product.id === action.payload.id) {\n          return _objectSpread({}, product, {\n            quantity: product.quantity + 1\n          });\n        }\n\n        return product;\n      });\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default basketReducer;","map":{"version":3,"sources":["F:\\Programming\\TEST-TASKS\\theadmasters\\admasters\\app\\reducers\\basketReducer.js"],"names":["actions","t","initialState","basketReducer","state","action","type","ADD_PRODUCT","found","find","product","id","payload","INCREMENT_PRODUCT","newState","map","console","log","quantity"],"mappings":";;AAAA,OAAO,KAAKA,OAAZ,MAAyB,oBAAzB;AACA,OAAO,KAAKC,CAAZ,MAAmB,gBAAnB;AACA,IAAMC,YAAY,GAAG,EAArB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,CAAC,CAACM,WAAP;AACE,UAAMC,KAAK,GAAGJ,KAAK,CAACK,IAAN,CAAW,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACO,OAAP,CAAeD,EAAlC;AAAA,OAAlB,CAAd;;AACA,UAAIH,KAAJ,EAAW;AACT,eAAOJ,KAAP;AACD;;AACD,0CAAWA,KAAX,IAAkBC,MAAM,CAACO,OAAzB;;AACF,SAAKX,CAAC,CAACY,iBAAP;AACE,UAAMC,QAAQ,GAAGV,KAAK,CAACW,GAAN,CAAU,UAAAL,OAAO,EAAI;AACpCM,QAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;;AACA,YAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACO,OAAP,CAAeD,EAAlC,EAAsC;AACpC,mCAAYD,OAAZ;AAAqBQ,YAAAA,QAAQ,EAAER,OAAO,CAACQ,QAAR,GAAmB;AAAlD;AACD;;AACD,eAAOR,OAAP;AACD,OANgB,CAAjB;AAOA,aAAOI,QAAP;;AACF;AACE,aAAOV,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,aAAf","sourcesContent":["import * as actions from '../actions/actions';\r\nimport * as t from '../types/types';\r\nconst initialState = [];\r\n\r\nconst basketReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case t.ADD_PRODUCT:\r\n      const found = state.find(product => product.id === action.payload.id);\r\n      if (found) {\r\n        return state;\r\n      }\r\n      return [...state, action.payload];\r\n    case t.INCREMENT_PRODUCT:\r\n      const newState = state.map(product => {\r\n        console.log(product);\r\n        if (product.id === action.payload.id) {\r\n          return { ...product, quantity: product.quantity + 1 };\r\n        }\r\n        return product;\r\n      });\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default basketReducer;\r\n"]},"metadata":{},"sourceType":"module"}