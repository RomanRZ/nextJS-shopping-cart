{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\Programming\\\\TEST-TASKS\\\\theadmasters\\\\admasters\\\\pages\\\\index.js\";\nimport React from 'react';\nimport Navbar from '../app/components/Navbar/Navbar';\nimport { connect } from 'react-redux'; // import { startClock, serverRenderClock } from '../store';\n\nimport ProductsContainer from '../app/components/Products/ProductsContainer';\n\nvar index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(index, _React$Component);\n\n  function index() {\n    _classCallCheck(this, index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(index).apply(this, arguments));\n  }\n\n  _createClass(index, [{\n    key: \"render\",\n    // static getInitialProps ({ reduxStore, req }) {\n    //   const isServer = !!req\n    //   // DISPATCH ACTIONS HERE ONLY WITH `reduxStore.dispatch`\n    //   reduxStore.dispatch(serverRenderClock(isServer))\n    //   return {}\n    // }\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(ProductsContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), \";\");\n    }\n  }]);\n\n  return index;\n}(React.Component); // const mapDispatchToProps = { startClock };\n// export default connect(\n//   null,\n//   mapDispatchToProps\n// )(Index);\n\n\nexport { index as default };","map":{"version":3,"sources":["F:\\Programming\\TEST-TASKS\\theadmasters\\admasters\\pages\\index.js"],"names":["React","Navbar","connect","ProductsContainer","index","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,8CAA9B;;IAEqBC,K;;;;;;;;;;;;;AACnB;AACA;AACA;AACA;AAEA;AACA;6BAES;AACP,aACE,0CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,MADF;AAMD;;;;EAhBgCJ,KAAK,CAACK,S,GAkBzC;AACA;AACA;AACA;AACA;;;SAtBqBD,K","sourcesContent":["import React from 'react';\nimport Navbar from '../app/components/Navbar/Navbar';\n\nimport { connect } from 'react-redux';\n// import { startClock, serverRenderClock } from '../store';\nimport ProductsContainer from '../app/components/Products/ProductsContainer';\n\nexport default class index extends React.Component {\n  // static getInitialProps ({ reduxStore, req }) {\n  //   const isServer = !!req\n  //   // DISPATCH ACTIONS HERE ONLY WITH `reduxStore.dispatch`\n  //   reduxStore.dispatch(serverRenderClock(isServer))\n\n  //   return {}\n  // }\n\n  render() {\n    return (\n      <>\n        <Navbar />\n        <ProductsContainer />;\n      </>\n    );\n  }\n}\n// const mapDispatchToProps = { startClock };\n// export default connect(\n//   null,\n//   mapDispatchToProps\n// )(Index);\n"]},"metadata":{},"sourceType":"module"}